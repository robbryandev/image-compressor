/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	   tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	-webkit-text-decoration: underline dotted;
	        text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */
 
:-moz-focusring {
	outline: auto;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

:root,
[data-theme] {
	background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
	color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

html {
	-webkit-tap-highlight-color: transparent;
}

:root {
	color-scheme: dark;
	--pf: 0 0% 80%;
	--sf: 218.4 54.348% 14.431%;
	--af: 318.62 21.805% 20.863%;
	--nf: 270 4.3478% 7.2157%;
	--pc: 0 0% 20%;
	--sc: 218.4 100% 83.608%;
	--ac: 318.62 84.615% 85.216%;
	--inc: 202.35 100% 14%;
	--suc: 89.007 100% 10.392%;
	--wac: 53.906 100% 12.706%;
	--erc: 0 100% 14.353%;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: .2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0 0% 100%;
	--s: 218.4 54.348% 18.039%;
	--a: 318.62 21.805% 26.078%;
	--n: 270 4.3478% 9.0196%;
	--nc: 37.083 67.29% 58.039%;
	--b1: 240 10% 3.9216%;
	--b2: 270 4.3478% 9.0196%;
	--b3: 270 2.1739% 18.039%;
	--bc: 37.083 67.29% 58.039%;
	--in: 202.35 100% 70%;
	--su: 89.007 61.633% 51.961%;
	--wa: 53.906 68.817% 63.529%;
	--er: 0 100% 71.765%;
}

[data-theme=luxury] {
	color-scheme: dark;
	--pf: 0 0% 80%;
	--sf: 218.4 54.348% 14.431%;
	--af: 318.62 21.805% 20.863%;
	--nf: 270 4.3478% 7.2157%;
	--pc: 0 0% 20%;
	--sc: 218.4 100% 83.608%;
	--ac: 318.62 84.615% 85.216%;
	--inc: 202.35 100% 14%;
	--suc: 89.007 100% 10.392%;
	--wac: 53.906 100% 12.706%;
	--erc: 0 100% 14.353%;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: .2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0 0% 100%;
	--s: 218.4 54.348% 18.039%;
	--a: 318.62 21.805% 26.078%;
	--n: 270 4.3478% 9.0196%;
	--nc: 37.083 67.29% 58.039%;
	--b1: 240 10% 3.9216%;
	--b2: 270 4.3478% 9.0196%;
	--b3: 270 2.1739% 18.039%;
	--bc: 37.083 67.29% 58.039%;
	--in: 202.35 100% 70%;
	--su: 89.007 61.633% 51.961%;
	--wa: 53.906 68.817% 63.529%;
	--er: 0 100% 71.765%;
}

[data-theme=forest] {
	color-scheme: dark;
	--pf: 141.04 71.963% 33.569%;
	--sf: 140.98 74.694% 38.431%;
	--af: 35.148 68.98% 41.569%;
	--nf: 0 9.6774% 4.8627%;
	--b2: 0 12.195% 7.2353%;
	--b3: 0 12.195% 6.5118%;
	--in: 198 93% 60%;
	--su: 158 64% 52%;
	--wa: 43 96% 56%;
	--er: 0 91% 71%;
	--bc: 0 11.727% 81.608%;
	--sc: 140.98 100% 9.6078%;
	--ac: 35.148 100% 10.392%;
	--nc: 0 6.8894% 81.216%;
	--inc: 198 100% 12%;
	--suc: 158 100% 10%;
	--wac: 43 100% 11%;
	--erc: 0 100% 14%;
	--rounded-box: 1rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: .2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 141.04 71.963% 41.961%;
	--pc: 140.66 100% 88.039%;
	--s: 140.98 74.694% 48.039%;
	--a: 35.148 68.98% 51.961%;
	--n: 0 9.6774% 6.0784%;
	--b1: 0 12.195% 8.0392%;
	--rounded-btn: 1.9rem;
}
.btn {
	display: inline-flex;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	border-color: transparent;
	border-color: hsl(var(--n) / var(--tw-border-opacity));
	text-align: center;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	border-radius: var(--rounded-btn, 0.5rem);
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 1em;
	min-height: 3rem;
	font-weight: 600;
	text-transform: uppercase;
	text-transform: var(--btn-text-case, uppercase);
	text-decoration-line: none;
	text-decoration-line: none;
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-disabled,
  .btn[disabled] {
	pointer-events: none;
}
.btn.loading,
    .btn.loading:hover {
	pointer-events: none;
}
.btn.loading:before {
	margin-right: 0.5rem;
	height: 1rem;
	width: 1rem;
	border-radius: 9999px;
	border-width: 2px;
	animation: spin 2s linear infinite;
	content: "";
	border-top-color: transparent;
	border-left-color: transparent;
	border-bottom-color: currentColor;
	border-right-color: currentColor;
}
@media (prefers-reduced-motion: reduce) {

	.btn.loading:before {
		animation: spin 10s linear infinite;
	}
}
@keyframes spin {

	from {
		transform: rotate(0deg);
	}

	to {
		transform: rotate(360deg);
	}
}
.btn-group > input[type="radio"].btn {
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
}
.btn-group > input[type="radio"].btn:before {
	content: attr(data-title);
}
.divider {
	display: flex;
	flex-direction: row;
	align-items: center;
	align-self: stretch;
	margin-top: 1rem;
	margin-bottom: 1rem;
	height: 1rem;
	white-space: nowrap;
}
.divider:before,
  .divider:after {
	content: "";
	flex-grow: 1;
	height: 0.125rem;
	width: 100%;
}
.file-input {
	height: 3rem;
	flex-shrink: 1;
	padding-right: 1rem;
	font-size: 0.875rem;
	font-size: 1rem;
	line-height: 1.25rem;
	line-height: 2;
	line-height: 1.5rem;
	overflow: hidden;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
}
.file-input::file-selector-button {
	margin-right: 1rem;
	display: inline-flex;
	height: 2.875rem;
	min-height: 2.875rem;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 1em;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	border-style: solid;
	--tw-border-opacity: 1;
	border-color: hsl(var(--n) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	font-weight: 600;
	text-transform: uppercase;
	text-transform: var(--btn-text-case, uppercase);
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
	text-decoration-line: none;
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
}
.hero {
	display: grid;
	width: 100%;
	place-items: center;
	background-size: cover;
	background-position: center;
}
.hero > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.hero-content {
	z-index: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	max-width: 80rem;
	gap: 1rem;
	padding: 1rem;
}
.input {
	flex-shrink: 1;
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	font-size: 1rem;
	line-height: 1.25rem;
	line-height: 2;
	line-height: 1.5rem;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
}
.input-group > .input {
	isolation: isolate;
}
.input-group > *,
  .input-group > .input,
  .input-group > .textarea,
  .input-group > .select {
	border-radius: 0px;
}
.link {
	cursor: pointer;
	text-decoration-line: underline;
}
.progress {
	position: relative;
	width: 100%;
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
	overflow: hidden;
	height: 0.5rem;
	border-radius: var(--rounded-box, 1rem);
}
.radial-progress {
	position: relative;
	display: inline-grid;
	height: var(--size);
	width: var(--size);
	place-content: center;
	border-radius: 9999px;
	background-color: transparent;
	vertical-align: middle;
	box-sizing: content-box;
	--value: 0;
	--size: 5rem;
	--thickness: calc(var(--size) / 10);
}
.radial-progress::-moz-progress-bar {
	-moz-appearance: none;
	     appearance: none;
	background-color: transparent;
}
.radial-progress::-webkit-progress-value {
	-webkit-appearance: none;
	        appearance: none;
	background-color: transparent;
}
.radial-progress::-webkit-progress-bar {
	-webkit-appearance: none;
	        appearance: none;
	background-color: transparent;
}
.radial-progress:before,
.radial-progress:after {
	position: absolute;
	border-radius: 9999px;
	content: "";
}
.radial-progress:before {
	inset: 0px;
	background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat, conic-gradient(currentColor calc(var(--value) * 1%), #0000 0);
	-webkit-mask: radial-gradient(farthest-side, #0000 calc(99% - var(--thickness)), #000 calc(100% - var(--thickness)));
	mask: radial-gradient(farthest-side, #0000 calc(99% - var(--thickness)), #000 calc(100% - var(--thickness)));
}
.radial-progress:after {
	inset: calc(50% - var(--thickness) / 2);
	transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
	background-color: currentColor;
}
.btn-outline .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-accent .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-outline .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	background-color: transparent;
}
.btn-outline.btn-primary .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-accent .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-info .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--in) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--in) / var(--tw-text-opacity));
}
.btn-outline.btn-success .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--su) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--su) / var(--tw-text-opacity));
}
.btn-outline.btn-warning .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--wa) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--wa) / var(--tw-text-opacity));
}
.btn-outline.btn-error .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--er) / var(--tw-text-opacity));
}
.btn-outline:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.btn-outline:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pc) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sc) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--ac) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--ac) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--ac) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn:active:hover,
  .btn:active:focus {
	animation: none;
	transform: scale(var(--btn-focus-scale, 0.95));
}
.btn:hover,
    .btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
}
.btn:focus-visible {
	outline: 2px solid hsl(var(--nf));
	outline-offset: 2px;
}
.btn-secondary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-secondary:hover,
    .btn-secondary.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sf, var(--s)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
}
.btn-secondary:focus-visible {
	outline: 2px solid hsl(var(--s));
}
.btn-info {
	--tw-border-opacity: 1;
	border-color: hsl(var(--in) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--inc, var(--nc)) / var(--tw-text-opacity));
}
.btn-info:hover,
    .btn-info.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--in) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
.btn-info:focus-visible {
	outline: 2px solid hsl(var(--in));
}
.btn.glass:hover,
    .btn.glass.btn-active {
	--glass-opacity: 25%;
	--glass-border-opacity: 15%;
}
.btn.glass:focus-visible {
	outline: 2px solid currentColor;
}
.btn-outline {
	border-color: currentColor;
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.btn-outline:hover,
    .btn-outline.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--b1) / var(--tw-text-opacity));
}
.btn-outline.btn-primary {
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover,
      .btn-outline.btn-primary.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary {
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover,
      .btn-outline.btn-secondary.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sf, var(--s)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-accent {
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover,
      .btn-outline.btn-accent.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--af, var(--a)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-outline.btn-success {
	--tw-text-opacity: 1;
	color: hsl(var(--su) / var(--tw-text-opacity));
}
.btn-outline.btn-success:hover,
      .btn-outline.btn-success.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--su) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--su) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
}
.btn-outline.btn-info {
	--tw-text-opacity: 1;
	color: hsl(var(--in) / var(--tw-text-opacity));
}
.btn-outline.btn-info:hover,
      .btn-outline.btn-info.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--in) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--inc, var(--nc)) / var(--tw-text-opacity));
}
.btn-outline.btn-warning {
	--tw-text-opacity: 1;
	color: hsl(var(--wa) / var(--tw-text-opacity));
}
.btn-outline.btn-warning:hover,
      .btn-outline.btn-warning.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--wa) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--wa) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--wac, var(--nc)) / var(--tw-text-opacity));
}
.btn-outline.btn-error {
	--tw-text-opacity: 1;
	color: hsl(var(--er) / var(--tw-text-opacity));
}
.btn-outline.btn-error:hover,
      .btn-outline.btn-error.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--er) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}
.btn-disabled,
  .btn-disabled:hover,
  .btn[disabled],
  .btn[disabled]:hover {
	--tw-border-opacity: 0;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.2;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	--tw-text-opacity: 0.2;
}
.btn.loading.btn-square:before,
    .btn.loading.btn-circle:before {
	margin-right: 0px;
}
.btn.loading.btn-xl:before,
    .btn.loading.btn-lg:before {
	height: 1.25rem;
	width: 1.25rem;
}
.btn.loading.btn-sm:before,
    .btn.loading.btn-xs:before {
	height: 0.75rem;
	width: 0.75rem;
}
.btn-group > input[type="radio"]:checked.btn,
  .btn-group > .btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
	outline: 2px solid hsl(var(--p));
}
@keyframes button-pop {

	0% {
		transform: scale(var(--btn-focus-scale, 0.95));
	}

	40% {
		transform: scale(1.02);
	}

	100% {
		transform: scale(1);
	}
}
@keyframes checkmark {

	0% {
		background-position-y: 5px;
	}

	50% {
		background-position-y: -2px;
	}

	100% {
		background-position-y: 0;
	}
}
.divider:before {
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
}
.divider:after {
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
}
.divider:not(:empty) {
	gap: 1rem;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-secondary {
	outline: 2px solid hsl(var(--s));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-info {
	outline: 2px solid hsl(var(--in));
}
.file-input-bordered {
	--tw-border-opacity: 0.2;
}
.file-input:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.file-input-secondary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
}
.file-input-secondary:focus {
	outline: 2px solid hsl(var(--s));
}
.file-input-secondary::file-selector-button {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.file-input-disabled,
  .file-input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}
.file-input-disabled::-moz-placeholder, .file-input[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.file-input-disabled::placeholder,
  .file-input[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.file-input-disabled::file-selector-button, .file-input[disabled]::file-selector-button {
	--tw-border-opacity: 0;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.2;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	--tw-text-opacity: 0.2;
}
.input[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}
.input:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.input-disabled,
  .input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}
.input-disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.input-disabled::placeholder,
  .input[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.link:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.link:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.progress::-moz-progress-bar {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
}
.progress-secondary::-moz-progress-bar {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
}
.progress-accent::-moz-progress-bar {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
}
.progress-info::-moz-progress-bar {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
.progress:indeterminate::after {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	content: "";
	position: absolute;
	top: 0px;
	bottom: 0px;
	left: -40%;
	width: 33.333333%;
	border-radius: var(--rounded-box, 1rem);
	animation: progress-loading 5s infinite ease-in-out;
}
.progress-secondary:indeterminate::after {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
}
.progress-accent:indeterminate::after {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
}
.progress-info:indeterminate::after {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
.progress::-webkit-progress-bar {
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.2;
	border-radius: var(--rounded-box, 1rem);
}
.progress::-webkit-progress-value {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	border-radius: var(--rounded-box, 1rem);
}
.progress-secondary::-webkit-progress-value {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
}
.progress-accent::-webkit-progress-value {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
}
.progress-info::-webkit-progress-value {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
@keyframes progress-loading {

	50% {
		left: 107%;
	}
}
@keyframes radiomark {

	0% {
		box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
	}

	50% {
		box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
	}

	100% {
		box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
	}
}
@keyframes rating-pop {

	0% {
		transform: translateY(-0.125em);
	}

	40% {
		transform: translateY(-0.125em);
	}

	100% {
		transform: translateY(0);
	}
}
@keyframes toast-pop {

	0% {
		transform: scale(0.9);
		opacity: 0;
	}

	100% {
		transform: scale(1);
		opacity: 1;
	}
}
.divider-horizontal {
	flex-direction: column;
}
.divider-horizontal:before {
	height: 100%;
	width: 0.125rem;
}
.divider-horizontal:after {
	height: 100%;
	width: 0.125rem;
}
.btn-group .btn:not(:first-child):not(:last-child) {
	border-top-left-radius: 0;
	border-top-right-radius: 0;
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}
.btn-group .btn:first-child:not(:last-child) {
	margin-top: -0px;
	margin-left: -1px;
	border-top-left-radius: var(--rounded-btn, 0.5rem);
	border-top-right-radius: 0;
	border-bottom-left-radius: var(--rounded-btn, 0.5rem);
	border-bottom-right-radius: 0;
}
.btn-group .btn:last-child:not(:first-child) {
	border-top-left-radius: 0;
	border-top-right-radius: var(--rounded-btn, 0.5rem);
	border-bottom-left-radius: 0;
	border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}
.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
	border-top-left-radius: 0;
	border-top-right-radius: 0;
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}
.btn-group-horizontal .btn:first-child:not(:last-child) {
	margin-top: -0px;
	margin-left: -1px;
	border-top-left-radius: var(--rounded-btn, 0.5rem);
	border-top-right-radius: 0;
	border-bottom-left-radius: var(--rounded-btn, 0.5rem);
	border-bottom-right-radius: 0;
}
.btn-group-horizontal .btn:last-child:not(:first-child) {
	border-top-left-radius: 0;
	border-top-right-radius: var(--rounded-btn, 0.5rem);
	border-bottom-left-radius: 0;
	border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}
.btn-group-vertical .btn:first-child:not(:last-child) {
	margin-top: -1px;
	margin-left: -0px;
	border-top-left-radius: var(--rounded-btn, 0.5rem);
	border-top-right-radius: var(--rounded-btn, 0.5rem);
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}
.btn-group-vertical .btn:last-child:not(:first-child) {
	border-top-left-radius: 0;
	border-top-right-radius: 0;
	border-bottom-left-radius: var(--rounded-btn, 0.5rem);
	border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}
.divider-horizontal {
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: 1rem;
	margin-right: 1rem;
	height: auto;
	width: 1rem;
}
.invisible {
	visibility: hidden;
}
.mx-auto {
	margin-left: auto;
	margin-right: auto;
}
.hidden {
	display: none;
}
.min-h-screen {
	min-height: 100vh;
}
.w-full {
	width: 100%;
}
.w-1\/4 {
	width: 25%;
}
.w-20 {
	width: 5rem;
}
.w-32 {
	width: 8rem;
}
.w-28 {
	width: 7rem;
}
.w-24 {
	width: 6rem;
}
.w-1\/2 {
	width: 50%;
}
.space-y-12 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(3rem * var(--tw-space-y-reverse));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.bg-neutral {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
}
.pt-10 {
	padding-top: 2.5rem;
}
.text-center {
	text-align: center;
}
.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}
.font-bold {
	font-weight: 700;
}
.text-white {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-primary {
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}